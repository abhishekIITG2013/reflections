What happens when you initialize a repository? Why do you need to do it?

You may also wish to run git status after you have created the file. You should see that now both files are listed as untracked files.

When you've created and updated your reflections document for lesson 2

###my work
git stores metadata about files in .git  folder (hidden file folder in your repository)
1-it is placed there when you use git checkout <tag_url>
2-or when you set up your project in new direcory
	git init     (initialise and create a new git repository)
		0 commits and to check commits use commands
	git log
		error - fatal: bad default revision 'HEAD'
		HEAD is git terminology for current commit -- above error message means that you can not view any commit history because there is no commit yet

	git status
		shows branch
		git shows latest commit there is no commit so says Initial Commit

(Q 2) How is the staging area different from the working directory and the repository? What value do you think it offers?

staging area is related to git repository online and working directory is related to staging area. Its a level of abstractions one must pass through the other.

(Q 3) How can you use the staging area to make sure you have one commit per logical change?
Ans  Above can be achieved by saving all changes to staging area (git add) and the after logical change is xomplete then add it in repo (ie commit)

(Q 4) What are some situations when branches would be helpful in keeping your history organized? How would branches help?
Ans For example you want to expoeriment with the code and want to add a new feature while you also want to work on the previous code without affecting it. So now you can make 2 branches one for work and other for experiment . One will not affect the other branch.

(Q 5) How do the diagrams help you visualize the branch structure?
Ans  Diagram give you clear picuter of commits which are reacheable which are in deatched head state where are you compare to other branches and work so that you dont mess up your or others work.
Which branches contains which commit and where to create a branch


(Q 6)What is the result of merging two branches together? Why do we represent it in the diagram the way we do?
Ans By diagram it is easy to visualise the dependency and history an interrealtion of different branches.


